---
title: "Characterizing influenza viral kinetics"
author: "Phrutsamon Wongnak"
format: html
editor: visual
---

```{r}
#library(conflicted)
library(rstan)
library(tidyverse)
library(kableExtra)
library(finalfit)
library(RColorBrewer)
library(lubridate)
library(brms)
library(ggplot2)
library(ggpubr)
library(scales)
library(cowplot)
library(grid)
library(webshot2)
library(webshot)
library(magick)
library(GGally)

#conflicts_prefer(dplyr::filter)

## information on software/hardware used
version
sessionInfo()

rstan_options(auto_write = TRUE)
## parameters for the analysis
RUN_MODELS = F

my_probs = c(0.025, 0.1, .5, .9, .975)
source('functions.R')
source('priors.R')
```

## *Load data*

```{r}
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- 5.5
Type <- c("All")
Mod <- "Exponential" 

ind <- which(model_settings$Dmax == Dmax & model_settings$Type %in% Type &
             grepl(Mod, model_settings$mod))
```

```{r}
#| echo: false

  load(paste0("Rout/model_settings_job_", ind, ".RData"))
  load(paste0("Rout/model_fits_job_", ind, ".RData"))  
  
  slope <- rstan::extract(out, pars = "slope")[[1]] 
  summary_slope <- slope %>% apply(2, quantile, my_probs)
  summary_hl <- slope_to_hl(summary_slope) %>% t() %>% as.data.frame()
  colnames(summary_hl) <- c("P2.5", "P10", "P50", "P90", "P97.5")

  fluTypes <- stan_inputs$cov_matrices$X_slope[[1]][,'fluTypeB'][stan_inputs$analysis_data_stan$ind_start]
  
  summary_hl$fluType <- ifelse(fluTypes == 0, "A", "B")
  summary_hl
```

```{r}
summary_Params$Type <- as.factor(summary_Params$Type)
levels(summary_Params$Type) <- c("Influenza A", "Influenza B", "Both types")

summary_Params$params <- as.factor(summary_Params$params)
summary_Params$facet <- c("alpha[0]", "beta[0]", "sigma[u[1]]^{2}", "sigma[u[2]]^{2}", "sigma[logvl]")[as.numeric(summary_Params$params)]

```

```{r}
G <- ggplot(summary_Params, aes(x = Type, y = P50, col = Type)) +
  geom_point(size = 3) +
  geom_errorbar(aes(x = Type, ymin = P2.5, ymax = P97.5),
                width = 0.1, linewidth = 0.85) +
  theme_bw(base_size = 10) +
  facet_wrap(.~facet, scales = 'free', labeller = label_parsed) +
  scale_color_manual(values = c("#EE4266", "#387ADF", "gray20"), guide = NULL) +
  xlab("") +
  ylab("Parameter estimates") +
  theme(strip.text = element_text(size = 9),
        panel.spacing = unit(1, "lines")) 
G
```

```{r}
Plot_now <- T
if(Plot_now){
  plot_name <- paste0('Plots/posterior_params_', floor(Dmax), '.png')
  
  png(plot_name, width = 8, height = 5, units = 'in', res = 350)
  print(G)
  dev.off()  
}
```

```{r}
# Correlation matrix of poterior distributions
Plot_now = T

if(Plot_now){
  for(i in 1:length(ind)){
    G_cor <- ggpairs(posterior_Params[[i]]) +
      theme_bw()
    plot_name <- paste0('Plots/Correlation_matrix_', Type[i], "_", floor(Dmax), '.png')
  
  png(plot_name, width = 10,height = 10, units = 'in', res = 350)
  print(G_cor)
  dev.off() 
    
  }
}
```

```{r}
summary_hl <- summary_hl %>% arrange(fluType, P50)
summary_hl$fluType <- as.factor(summary_hl$fluType)
summary_hl$ID <- 1:nrow(summary_hl)


summary_hl_med_type <- summary_hl %>% group_by(fluType) %>%
  reframe(Q1 = quantile(P50, 0.25),
             Q2 = quantile(P50, 0.5),
             Q3 = quantile(P50, 0.75)) %>%
  mutate(lab = paste0("Influenza ", fluType, ": ",
                          round(Q2,1), " h [IQR: ",
                          round(Q1,1), " to ",
                          round(Q3,1), " h]"))

summary_hl_med <- summary_hl %>%
  reframe(Q1 = quantile(P50, 0.25),
          Q2 = quantile(P50, 0.5),
          Q3 = quantile(P50, 0.75)) %>%
  mutate(lab = paste0("Influenza A and B: ",
                      round(Q2,1), " h [IQR: ",
                      round(Q1,1), " to ",
                      round(Q3,1), " h]"))

labs <- paste(c(summary_hl_med_type$lab, summary_hl_med$lab),collapse="\n")
```

```{r}
G_hl <- ggplot(summary_hl, aes(x = P50, y = ID, col = fluType)) +
  geom_point(size = 2, alpha = 0.75) +
  geom_errorbar(aes(xmin = P2.5, xmax = P97.5), width = 0,
                linewidth = 0.5, alpha = 0.75) +
  theme_bw(base_size = 12) +
  xlab("Viral clearance half-life (h)") +
  ylab("Individual patient") +
  geom_vline(xintercept = 0, col = "red", linetype = "dashed") +
  scale_color_manual(values = c("#EE4266", "#387ADF"), name = "Influenza type") +
  theme(axis.text.y = element_blank()) +
  geom_vline(data = summary_hl_med_type, mapping = aes(xintercept = Q2, col=fluType),
             linewidth = 1, alpha = 0.75) +
  #geom_vline(xintercept = summary_hl_med$Q2, linewidth = 1.2, col = "gray20") +
  annotate('text', x = 40, y = 10, label = labs, hjust = 0, size = 4) +
  guides(
    color = guide_legend(
      override.aes = list(linetype = c("blank", "blank"), shape = c(16, 16))
    )
  )
G_hl
```

```{r}
Plot_now <- T
if(Plot_now){
  plot_name <- paste0('Plots/posterior_hl_', floor(Dmax), '.png')
  
  png(plot_name, width = 8, height = 5, units = 'in', res = 350)
  print(G_hl)
  dev.off()  
}
```
