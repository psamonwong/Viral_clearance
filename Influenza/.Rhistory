library(cowplot)
library(grid)
library(webshot2)
library(webshot)
library(magick)
#conflicts_prefer(dplyr::filter)
## information on software/hardware used
version
sessionInfo()
rstan_options(auto_write = TRUE)
## parameters for the analysis
RUN_MODELS = F
my_probs = c(0.025, 0.1, .5, .9, .975)
source('functions.R')
source('priors.R')
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- 14.5
Type <- "All"
ind <- which(model_settings$Dmax == Dmax & model_settings$Type == Type)[1]
#| echo: false
load(paste0("Rout/model_settings_job_", ind, ".RData"))
load(paste0("Rout/model_fits_job_", ind, ".RData"))
Plot_now = T
if(Plot_now){
plot_name <- paste0('Plots/viral_dynamics_type_', Type,'.png')
png(plot_name, width = ifelse(Type == "All", 8, 4), height = 4, units = 'in', res = 350)
print(plot_vl_base(adastra_dat_analysis, fluType = T) )
dev.off()
}
adastra_dat_analysis %>%
group_by(Timepoint_ID, ID, fluType) %>%
summarise(censored = any(censor == "left"), .groups = "keep") %>%
ungroup() %>%
group_by(Timepoint_ID) %>%
summarise(n = n(),
n_censored = sum(censored),
percentage = round(n_censored*100/n)) %>%
ungroup() %>%
mutate(lab = paste0(n_censored, "/", n, " (", percentage, "%)"),
Timepoint_ID = paste0("D", Timepoint_ID))
adastra_dat_analysis %>%
group_by(Timepoint_ID, ID, fluType) %>%
summarise(censored = any(censor == "left"), .groups = "keep") %>%
ungroup() %>%
group_by(Timepoint_ID, fluType) %>%
summarise(n = n(),
n_censored = sum(censored),
percentage = round(n_censored*100/n)) %>%
ungroup() %>%
mutate(lab = paste0(n_censored, "/", n, " (", percentage, "%)"),
Timepoint_ID = paste0("D", Timepoint_ID))
alpha_0 <-  rstan::extract(out, pars = 'alpha_0')$alpha_0 %>% median()
beta_0 <-  rstan::extract(out, pars = 'beta_0')$beta_0 %>% median()
slope <-  rstan::extract(out, pars = 'slope')
slope <- apply(slope$slope, 2, median)
preds <-  rstan::extract(out, pars = 'preds')
preds <- apply(preds$preds, 2, median)
preds_d0 <- preds[stan_inputs$analysis_data_stan$ind_start]
fluType <- stan_inputs$cov_matrices$X_int[[1]][,2][stan_inputs$analysis_data_stan$ind_start]
fluType <- ifelse(fluType == 1, "B", "A")
symptomDay <- stan_inputs$cov_matrices$X_int[[1]][,1][stan_inputs$analysis_data_stan$ind_start]
dat_plot <- data.frame(fluType, preds_d0, slope, symptomDay = as.factor(symptomDay))
cor <- cor.test(dat_plot$preds_d0, dat_plot$slope, method = "pearson")
lab <- paste0('Correlation coefficient:\n', round(cor$estimate,2), " [95%CI: ", round(cor$conf.int[1],2), " to ", round(cor$conf.int[2],2), "]")
G <- ggplot(dat_plot, aes(y = preds_d0, x = slope, col = fluType, shape = symptomDay)) +
geom_point(size = 3.5, alpha = 0.8) +
geom_point(x = beta_0, y = alpha_0, size = 5.5, col = "#2A3335", shape = 18, alpha = 0.8) +
theme_bw(base_size = 13) +
xlim(-5,0) +
xlab("Viral clearance rate \n(log10 genomes/mL/day)") +
ylab("Estimated admission viral densities \n(log10 genomes/mL)") +
scale_y_continuous(breaks = seq(0,8,1)) +
scale_color_manual(values = c("#EE4266", "#387ADF"), name = "Influenza type") +
scale_shape_manual(values = c(16, 17, 15, 25), name = "Day(s) since\nsymptom onset") +
#annotate('text', x = -4, y = 6, label = lab) +
coord_flip()
G
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- 5.5
Type <- "All"
data_plot <- list()
pred_plot <- list()
# exponential decay model
ind_exp <- which(model_settings$Dmax == Dmax & model_settings$Type == Type &
grepl("Exponential", model_settings$mod))
load(paste0("Rout/model_settings_job_", ind_exp, ".RData"))
load(paste0("Rout/model_fits_job_", ind_exp, ".RData"))
data_plot[[1]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[1]]$preds <- apply(preds$preds, 2, median)
data_plot[[1]]$mod <- model_settings$mod[ind_exp]
alpha_0 <-  rstan::extract(out, pars = 'alpha_0')$alpha_0
beta_0 <-  rstan::extract(out, pars = 'beta_0')$beta_0
t <- seq(0,14,0.1)
preds_exp <- matrix(nrow = length(t), ncol = length(alpha_0))
for(i in 1:ncol(preds_exp)){
preds_exp[,i] <- alpha_0[i] + beta_0[i] * t
}
pred_plot[[1]] <- data.frame(t = t,
med = apply(preds_exp,1, median),
low = apply(preds_exp,1, quantile, 0.025),
up = apply(preds_exp,1, quantile, 0.975),
mod = model_settings$mod[ind_exp])
Dmax <- 7.5
# exponential decay model
ind_exp <- which(model_settings$Dmax == Dmax & model_settings$Type == Type &
grepl("Exponential", model_settings$mod))
load(paste0("Rout/model_settings_job_", ind_exp, ".RData"))
load(paste0("Rout/model_fits_job_", ind_exp, ".RData"))
data_plot[[1]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[1]]$preds <- apply(preds$preds, 2, median)
data_plot[[1]]$mod <- model_settings$mod[ind_exp]
alpha_0 <-  rstan::extract(out, pars = 'alpha_0')$alpha_0
beta_0 <-  rstan::extract(out, pars = 'beta_0')$beta_0
t <- seq(0,14,0.1)
preds_exp <- matrix(nrow = length(t), ncol = length(alpha_0))
for(i in 1:ncol(preds_exp)){
preds_exp[,i] <- alpha_0[i] + beta_0[i] * t
}
pred_plot[[2]] <- data.frame(t = t,
med = apply(preds_exp,1, median),
low = apply(preds_exp,1, quantile, 0.025),
up = apply(preds_exp,1, quantile, 0.975),
mod = model_settings$mod[ind_exp])
pred_plot
pred_plot[[1]]
pred_plot[[2]]
pred_plot[[1]]$Dmax <- 5.5
pred_plot[[2]]$Dmax <- 7.5
pred_Plot <- do.call("rbind", pred_plot)
pred_Plot
data_Plot <- do.call("rbind", data_plot)
data_Plot
#Individual plots
data_Plot$censor <- as.factor(data_Plot$censor)
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
IDs
i <- 1
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
data_Plot_median_i
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
lab
data_Plot_i
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75)
pred_Plot_i <- pred_Plot %>% filter(ID == IDs[i])
pred_Plot_i
pred_Plot
model_settings <- read.csv("Outputs/model_settings.csv")
setwd("~/Project/Viral_clearance/Influenza")
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- 14.5
Type <- "All"
ind <- which(model_settings$Dmax == Dmax & model_settings$Type == Type)[1]
ind
load(paste0("Rout/model_settings_job_", ind, ".RData"))
load(paste0("Rout/model_fits_job_", ind, ".RData"))
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- 5.5
Type <- "All"
ind <- which(model_settings$Dmax == Dmax & model_settings$Type == Type)[1]
load(paste0("Rout/model_settings_job_", ind, ".RData"))
load(paste0("Rout/model_fits_job_", ind, ".RData"))
alpha_0 <-  rstan::extract(out, pars = 'alpha_0')$alpha_0 %>% median()
beta_0 <-  rstan::extract(out, pars = 'beta_0')$beta_0 %>% median()
slope <-  rstan::extract(out, pars = 'slope')
slope <- apply(slope$slope, 2, median)
preds <-  rstan::extract(out, pars = 'preds')
preds <- apply(preds$preds, 2, median)
preds_d0 <- preds[stan_inputs$analysis_data_stan$ind_start]
fluType <- stan_inputs$cov_matrices$X_int[[1]][,2][stan_inputs$analysis_data_stan$ind_start]
fluType <- ifelse(fluType == 1, "B", "A")
symptomDay <- stan_inputs$cov_matrices$X_int[[1]][,1][stan_inputs$analysis_data_stan$ind_start]
dat_plot <- data.frame(fluType, preds_d0, slope, symptomDay = as.factor(symptomDay))
dat_plot
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- c(5.5, 7.5)
Type <- "All"
ind <- which(model_settings$Dmax == Dmax & model_settings$Type == Type)[1]
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type)
ind
model_settings$mod
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type, grepl("Exponential_decay", model_settings$mod))
ind
grepl("Exponential_decay", model_settings$mod)
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type & grepl("Exponential_decay", model_settings$mod))
ind
i <- 1
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_Plot[[i]]$Dmax <- Dmax[i]
data_plot <- list()
i
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_plot[[i]]$Dmax <- Dmax[i]
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- c(5.5, 7.5)
Type <- "All"
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type & grepl("Exponential_decay", model_settings$mod))
data_plot <- list()
for(i in length(ind)){
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_plot[[i]]$Dmax <- Dmax[i]
}
data_Plot <- do.call("rbind", data_plot)
data_Plot
data_Plot_median <- data_Plot %>% distinct(ID, Timepoint_ID, mod, .keep_all = T) %>%
group_by(Timepoint_ID, mod) %>%
summarise(med = median(preds),
med_vl = median(daily_VL))
data_Plot_median <- data_Plot %>% distinct(ID, Timepoint_ID, Dmax, .keep_all = T) %>%
group_by(Timepoint_ID, Dmax) %>%
summarise(med = median(preds),
med_vl = median(daily_VL))
data_Plot_median
#Individual plots
data_Plot$censor <- as.factor(data_Plot$censor)
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
i <- 1
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
data_Plot_median_i
data_Plot_i
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75)
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75)
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- c(5.5, 7.5)
Type <- "All"
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type & grepl("Exponential_decay", model_settings$mod))
data_plot <- list()
ind
for(i in length(ind)){
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_plot[[i]]$Dmax <- Dmax[i]
}
data_plot[[1]]
data_plot <- list()
for(i in 1:length(ind)){
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_plot[[i]]$Dmax <- Dmax[i]
}
data_plot[[1]]
data_Plot <- do.call("rbind", data_plot)
#Individual plots
data_Plot$censor <- as.factor(data_Plot$censor)
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
i <- 1
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
data_Plot$Dmax <- as.factor(data_Plot$Dmax)
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
i <- 1
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75)
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Models") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,5)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Models") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,7)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Follow-up days") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,7)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
levels(data_Plot$Dmax) <- paste0(floor(levels(data_Plot$Dmax)), " days")
data_Plot <- do.call("rbind", data_plot)
#Individual plots
data_Plot$censor <- as.factor(data_Plot$censor)
data_Plot$Dmax <- as.factor(data_Plot$Dmax)
levels(data_Plot$Dmax) <- paste0(floor(levels(data_Plot$Dmax)), " days")
data_Plot <- do.call("rbind", data_plot)
data_Plot
data_Plot$Dmax
data_Plot$Dmax <- floor(data_Plot$Dmax)
data_Plot$Dmax <- as.factor(floor(data_Plot$Dmax))
levels(data_Plot$Dmax) <- paste0(levels(data_Plot$Dmax), " days")
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
i <- 1
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Follow-up days") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,7)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
ind_plot_list <- list()
for(i in 1:length(IDs)){
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
ind_plot_list[[i]] <-
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Follow-up") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,7)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
}
ind_plot_all <- ggarrange(plotlist =  ind_plot_list, nrow = 7, ncol = 4, common.legend = T, legend = "right")
plot_now = T
if(plot_now){
for(i in 1:length(ind_plot_all)){
png(paste0("Plots/Individual_plots_5vs7/Ind_plot_", i, ".png"), width = 12, height = 12, units = "in", res = 350)
print(annotate_figure( ind_plot_all[[i]], bottom = textGrob("Time since randomisation (days)", vjust = 0.5, gp = gpar(cex = 1.2, fontface="bold")),
left = textGrob("Viral densities (genomes/mL)", rot = 90, gp = gpar(cex = 1.2, fontface="bold"))))
dev.off()
}
}
model_settings <- read.csv("Outputs/model_settings.csv")
Dmax <- c(5.5, 7.5)
Type <- "All"
ind <- which(model_settings$Dmax %in% Dmax & model_settings$Type == Type & grepl("Exponential_decay", model_settings$mod))
data_plot <- list()
for(i in 1:length(ind)){
load(paste0("Rout/model_settings_job_", ind[i], ".RData"))
load(paste0("Rout/model_fits_job_", ind[i], ".RData"))
data_plot[[i]] <- adastra_dat_analysis
preds <-  rstan::extract(out, pars = 'preds')
data_plot[[i]]$preds <- apply(preds$preds, 2, median)
data_plot[[i]]$Dmax <- Dmax[i]
}
data_Plot <- do.call("rbind", data_plot)
#Individual plots
data_Plot$censor <- as.factor(data_Plot$censor)
data_Plot$censor
data_Plot$Dmax <- as.factor(floor(data_Plot$Dmax))
levels(data_Plot$Dmax) <- paste0(levels(data_Plot$Dmax), " days")
IDs <-data_Plot %>%
arrange(fluType, ID, Time) %>%
pull(ID) %>%
unique()
ind_plot_list <- list()
for(i in 1:length(IDs)){
data_Plot_i <- data_Plot %>% filter(ID == IDs[i])
data_Plot_median_i <- data_Plot_i %>% group_by(Timepoint_ID) %>%
mutate(med_vl = median(log10_viral_load)) %>%
ungroup() %>%
distinct(Timepoint_ID, .keep_all = T) %>%
select(Time, med_vl)
lab <- paste0(data_Plot_i$ID[1], "\nInfluenza ", data_Plot_i$fluType[1])
ind_plot_list[[i]] <-
ggplot(data_Plot_i, aes(x = Time)) +
geom_point(aes(y = log10_viral_load, shape = censor), size = 1.75) +
geom_line(aes(y = preds, col = Dmax), linewidth = 1, alpha = 0.75) +
#geom_point(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#           size=1.75, shape = 17, alpha = 0.75) +
#geom_line(data = data_Plot_median_i, mapping = aes(x = Time, y = med_vl),
#          linetype = "dashed", , alpha = 0.75) +
scale_color_manual(values = c("#69247C", "#DA498D","#F29F58"), name = "Follow-up") +
theme_bw(base_size = 10)   +
scale_y_continuous(labels=label_math(), breaks = seq(0,8,2)) +
coord_cartesian(ylim = c(0,8), xlim = c(0,7)) +
scale_shape_manual(values = c(25, 21), guide = "none", drop=FALSE) +
geom_hline(yintercept = 0, col = 'red', linetype = "dashed") +
ylab("") +
xlab("")  +
ggtitle(lab) +
theme(plot.title = element_text(face = "bold",hjust = 0.5, size = 8))
}
ind_plot_all <- ggarrange(plotlist =  ind_plot_list, nrow = 7, ncol = 4, common.legend = T, legend = "right")
plot_now = T
if(plot_now){
for(i in 1:length(ind_plot_all)){
png(paste0("Plots/Individual_plots_5vs7/Ind_plot_", i, ".png"), width = 12, height = 12, units = "in", res = 350)
print(annotate_figure( ind_plot_all[[i]], bottom = textGrob("Time since randomisation (days)", vjust = 0.5, gp = gpar(cex = 1.2, fontface="bold")),
left = textGrob("Viral densities (genomes/mL)", rot = 90, gp = gpar(cex = 1.2, fontface="bold"))))
dev.off()
}
}
